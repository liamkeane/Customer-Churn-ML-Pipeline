services:
  # MySQL database for telco db
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - telco_network

  # Postgres database for Airflow metadata
  postgres:
    container_name: postgres
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      retries: 5
    networks:
      - telco_network

  # Airflow webserver
  airflow-webserver:
    container_name: airflow-webserver
    build:
      context: .
      dockerfile: ./docker/airflow/Dockerfile
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY}
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW_FERNET_KEY}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./data/interim:/opt/airflow/data/interim
      - ./data/processed:/opt/airflow/data/processed
    ports:
      - "8080:8080"
    command: ["webserver"]
    networks:
      - telco_network

  # Airflow scheduler
  airflow-scheduler:
    container_name: airflow-scheduler
    build:
      context: .
      dockerfile: ./docker/airflow/Dockerfile
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY}
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW_FERNET_KEY}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./data/interim:/opt/airflow/data/interim
      - ./data/processed:/opt/airflow/data/processed
    command: ["scheduler"]
    networks:
      - telco_network

  # Jupyter Lab for development and analysis
  jupyter:
    container_name: jupyter
    build:
      context: .
      dockerfile: ./docker/jupyter/Dockerfile
    restart: always
    depends_on:
      - mysql
    environment:
      # Database connection
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_NAME: ${MYSQL_DATABASE}
      # Jupyter settings
      JUPYTER_ENABLE_LAB: "yes"
      GRANT_SUDO: "yes"
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./data/interim:/home/jovyan/data/interim
      - ./data/processed:/home/jovyan/data/processed
    ports:
      - "8888:8888"
    command: ["start-notebook.sh", "--NotebookApp.token='${JUPYTER_TOKEN}'", "--NotebookApp.password=''"]
    networks:
      - telco_network

volumes:
  mysql_data:
  postgres_data:
  jupyter_user_settings:

networks:
  telco_network:
    driver: bridge